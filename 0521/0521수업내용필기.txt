* CSS는 한줄적고 확인하고 다시 한줄적고 확인하는 과정을 거쳐함
 
* 논리적인 순서: 무엇을 먼저 마크업 할것인가?
		  로그인 -> 아이디(이미지/텍스트) -> 아이디 입력상자 -> 비밀번호 -> 비밀번호 입력상자 -> 로그인 버튼 
                         -> 회원가입 -> 회원가입 링크 -> 아이디/비밀번호 찾기 순서로 마크업
 
*의미에 맞는 마크업(시멘틱 마크업)
 -> 사람과 기계가 이해할 수 있는 마크업 

*컨텐츠의 제목 (바디테그에 제목)이 없으면 검색분류가 힘들다

*div/section/article

**로그인창
*section.login
*h2.login-heading
*form 서식
*fieldset (div하고 비슷한 성격, 둘다 그룹핑 대신 div는 의미없고 fieldset은 의미있음)
*fieldset 안에서 legend 서식 
*fieldset은 성격에 따라 여러개를 만들수 있으며 제한이 없음
*input에 label을 붙여주기 위해 두가지 방식이 있음
   -> 암묵적인 label:label태그안에 텍스트와 레이블 입력상자를 위치시킴
   -> 명시적인 label:input태그에 이름지정, input에 #user-id를 입력시키고 for를 "아이디"에다가 준다 (fo는 input태그가 어떤 attribute인지 알려주는것)
*<label>과 <input>를 한칸띄면 공백생성
*input태그에 type에 어떤 속성을 넣느냐에 따라 서식이 달라짐
*input태그는 width속성에 값을 영향을 받음 
*html에서 width나 height값을 넣을때 px은 뒤에 안써도된다.
*fieldset안에 또 다른 fieldset을 넣을 수 있음.
*legend의 디자인은 브라우저마다 다름(그래서 잘 안씀, 써도 숨김처리한다)
*웹카페 로그인창은 전체 그룹핑한것을 fieldset으로 묶고 legend는 숨김콘텐츠 처리할것임
*p테그는 마진값이 존재
*div는 agent 스타일이 없음
*div안에 label과 아이디 input을 넣고 또한 label과 비밀번호 input을 넣을것임
*로그인버튼은 input테그도 가능하지만 button태그로 타입속성을 이용해 만들 수 있다
->input태그는 빈요소(텍스트노드X), button태그는 텍스트노드가 존재
*링크가 두개 이상이면 목록형식으로 만드는게 좋음 
*디자인을 위해서는 디자인 설계가 선행되어야한다.
*font-weight?
*상황에 따라 구기능,신기능을 써야한다.
*line-height?
*ul의 자식요소로 div를 쓸 수가 없다.